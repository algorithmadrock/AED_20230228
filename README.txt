# AED_20230228
  Enunciados
    1) Criar uma aplicação em Java que tenha uma função recursiva que calcule o somatório do N primeiros número NATURAIS (a função deve retornar zero para números negativos. O código deve apresentar, em formato de comentário, como foi definida a condição de parada e a relação de chamada dos passos.
    2) Criar uma aplicação em Java que tenha uma função recursiva que, recebendo um número inteiro, converta para binário. Entrada limitada a 2000.  O código deve apresentar, em formato de comentário, como foi definida a condição de parada e a relação de chamada dos passos.
    3) Criar uma aplicação em Java que tenha uma função recursiva que, recebendo um número inteiro (N), apresente a saída da somatória: S= 1 + 1/2 + 1/3 + ... + 1/N.  O código deve apresentar, em formato de comentário, como foi definida a condição de parada e a relação de chamada dos passos.
    4) Criar uma aplicação em Java que tenha uma função recursiva que, recebendo um numero inteiro de 10 a 999999 e recebendo um 2º número inteiro (de 0 a 9), tenha uma função recursiva que apresente quantas vezes o 2º número aparece no primeiro. A validação da entrada e do dígito deve ser feito na main da aplicação e não na função recursiva. O código deve apresentar, em formato de comentário, como foi definida a condição de parada e a relação de chamada dos passos.
    5) Escrever uma função recursiva que, dado uma posição da série fibonacci, a função retorne seu valor. Entrada limitada a 20. O código deve apresentar, em formato de comentário, como foi definida a condição de parada e a relação de chamada dos passos.
    6) Considerando exercícios realizados anteriormente, criar uma função recursiva que solucione a função (Entrada limitada a 10):  S= 1 + 1/2! + 1/3! + ... + 1/N!. O código deve apresentar, em formato de comentário, como foi definida a condição de parada e a relação de chamada dos passos.
